;  usage: fapld file.fap
;  Execute a fap file

sub decompress(fin, filePtr)
        local fileSize, bytePtr, length, distance, i
        ; filePtr = malloc(1 << 20)
        bytePtr = malloc(2)

        while read(fin, bytePtr, 1) > 0 do
                if byte [bytePtr] == 255 then
                        read(fin, bytePtr, 2)
                        length = [bytePtr] & 63
                        distance = ([bytePtr] >> 6) & 1023
                        if (length == 0) then
                                byte [filePtr + fileSize] = 255
                                fileSize = fileSize + 1
                        else
                                if (length == 1) then
                                        ; write(fout, filePtr, fileSize)
                                        return fileSize
                                else
                                        i = 0
                                        while i < length do
                                                byte [filePtr + fileSize + i] = byte [filePtr + fileSize + i - distance - 1]
                                                i = i + 1
                                        end
                                        fileSize = fileSize + length
                                end
                        end
                else
                        byte [filePtr + fileSize] = byte [bytePtr]
                        fileSize = fileSize + 1
                end
        end
        ; write(fout, filePtr, fileSize)
        return fileSize
end

sub malloc(size)
        local ptr
        ptr = brk(-1)
        brk(ptr + size)
        return ptr
end

sub puts(strPtr)
	local c
	while c = byte [strPtr] do
		putch(c)
		strPtr = strPtr + 1
	end
	return 0
end

sub nextarg(strPtr)
	local c
	while c = byte [strPtr] do
		strPtr = strPtr + 1
	end
	return strPtr + 1
end

sub main(argc, argv)
	local fd, fap, ptr, ostab
	if argc < 2 then
		puts("usage: fapld file.fap")
		putch(10)
		exit()
	end
	argv = nextarg(argv)
	fd = open(argv, 2)
	if fd <= 0 then
		puts("error opening file ")
		puts(argv)
		putch(10)
		exit()
	end
	; 192k os table at 0x10000
	ostab = mmap(64 << 10, 192 << 10, 7, 34, -1, 0)
	if ostab != (64 << 10) then
		puts("unable to allocate os table")
		putch(10)
		close(fd)
		exit(ostab)
	end
	write_ostab(ostab)

	; 256k at 0x40000
	fap = mmap(256 << 10, 256 << 10, 7, 34, -1, 0)
	if fap != (256 << 10) then
		puts("unable to allocate fap block")
		putch(10)
		close(fd)
		exit(fap)
	end
	decompress(fd, fap)
	close(fd)
	return [fap](argc - 1, argv)
end
